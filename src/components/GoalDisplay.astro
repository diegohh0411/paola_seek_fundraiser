---
export const prerender = false;

import Container from "./Container.astro";
import { formatter, getID, sum } from "./utils";
import { totalExpenses } from './ExpensesDisplay.astro';
import L from "./Link.astro";

import { sql } from '../lib/neon.ts';

const raised_query = await sql`SELECT * FROM raised WHERE username = 'diego';`;
const ahorros = raised_query.filter(r => r.type === 'ahorro').map(r => r.amount);
const donaciones = raised_query.filter(r => r.type === 'donacion').map(r => r.amount);


const faltante = () => {
    return totalExpenses - sum(raised.map(i => sum(i.data)));
};

const raised: { label: string, color: string, data: number[]}[] = [
    {
        label: 'Ahorros',
        color: 'bg-blue-700',
        data: ahorros,
    },
    {
        label: 'Donaciones',
        color: 'bg-fuchsia-700',
        data: donaciones,
    },
]

raised.push({
    label: 'Faltante',
    color: 'bg-gray-500',
    data: [faltante()]
})


const uuid = '' + getID();
---
<Container id={uuid} asCallout={true}>
    <h3>¿Cuánto he reunido?</h3>

    <p>
        Entre trabajo, ahorros personales, una beca otorgada directamente por <L href="https://focus.org/">FOCUS Catholic</L> y donaciones de mis amigos, he logrado recaudar lo siguiente:
    </p>

    <div class="flex gap-8 w-full">
        {
            raised.map((rai, index) => {
                return <div class="flex flex-col gap-2 items-center justify-end" style={`width: ${ sum(rai.data) / totalExpenses * 100 }%`}>
                    <p class="text-sm text-center">{ rai.label }</p>

                    <div class:list={[
                        "h-2 w-full",
                        rai.color,
                        index == 0 ? 'rounded-l-full' : index == raised.length - 1 ? 'rounded-r-full' : ''
                    ]}></div>

                    <p class="text-xs text-center">
                        { formatter.format(sum(rai.data)) }
                    </p>
                </div>
            })
        }
    </div>
</Container>
